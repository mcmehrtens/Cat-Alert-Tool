[tool.poetry]
name = "cat-alert-tool"
version = "0.1.0"
description = "A Python-based web scraper that notifies the user when a new cat has been added to the Ames, IA animal shelter."
license = "MIT"
authors = ["Matthew Mehrtens <12023414+mcmehrtens@users.noreply.github.com>"]
readme = "README.md"
repository = "https://github.com/mcmehrtens/Cat-Alert-Tool"
keywords = [
    "cats",
    "adoption",
    "notification",
    "scraper",
]

[tool.poetry.dependencies]
python = "^3.13"
pyyaml = "^6.0.2"
pydantic = "^2.10.3"
requests = "^2.32.3"
selectolax = "^0.3.27"
pypubsub = "^4.0.3"
sqlalchemy = "^2.0.36"


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"


[tool.poetry.scripts]
cat-alert-tool = "cat_alert_tool.cat_alert_tool:main"


[tool.pyright]
exclude = [
    "config",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".pyright-override.toml",
    ".python-version",
    "LICENSE",
    "poetry.lock",
    "pyproject.toml",
    "README.md",
]
extends = ".pyright-override.toml"
pythonVersion = "3.13"
typeCheckingMode = "strict"
stubPath = "typings"
reportPrivateUsage = false


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov=cat_alert_tool",
    "--cov-report",
    "term",
    "--cov-report",
    "html:htmlcov",
]


[tool.ruff]
target-version = "py313"
exclude = [
    "config",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".pyright-override.toml",
    ".python-version",
    "LICENSE",
    "poetry.lock",
    "pyproject.toml",
    "README.md",
]
line-length = 79


[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "COM812",
    "ISC001",
]


[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ANN201",
    "D",
    "S101",
    "SLF",
]


[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.ruff.lint.pycodestyle]
max-doc-length = 72


[tool.ruff.format]
docstring-code-format = true
preview = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
